const axios = require('axios');
const fs = require('fs');
const path = require('path');

const API_URL = 'https://api.gitlab.com';

// Fetches the GitLab projects for a given user
async function fetchProjects(user) {
  const url = `${API_URL}/users/${user}/projects`;
  const response = await axios.get(url);
  return response.data;
}

// Fetches the GitLab issues for a given project
async function fetchIssues(projectId) {
  const url = `${API_URL}/projects/${projectId}/issues`;
  const response = await axios.get(url);
  return response.data;
}

// Fetches the GitLab merge requests for a given project
async function fetchMergeRequests(projectId) {
  const url = `${API_URL}/projects/${projectId}/merge_requests`;
  const response = await axios.get(url);
  return response.data;
}

// Writes the GitLab projects to a JSON file
async function writeProjectsToFile(user, projects) {
  const filePath = path.join(__dirname, `${user}_projects.json`);
  await fs.promises.writeFile(filePath, JSON.stringify(projects));
  console.log(`Projects written to ${filePath}`);
}

// Writes the GitLab issues to a JSON file
async function writeIssuesToFile(projectId, issues) {
  const filePath = path.join(__dirname, `${projectId}_issues.json`);
  await fs.promises.writeFile(filePath, JSON.stringify(issues));
  console.log(`Issues written to ${filePath}`);
}

// Writes the GitLab merge requests to a JSON file
async function writeMergeRequestsToFile(projectId, mergeRequests) {
  const filePath = path.join(__dirname, `${projectId}_merge_requests.json`);
  await fs.promises.writeFile(filePath, JSON.stringify(mergeRequests));
  console.log(`Merge requests written to ${filePath}`);
}

// Main function to fetch and write GitLab data
async function fetchAndWriteGitLabData(user) {
  try {
    const projects = await fetchProjects(user);
    const projectPromises = projects.map(async (project) => {
      const projectId = project.id;
      const issuesPromise = fetchIssues(projectId);
      const mergeRequestsPromise = fetchMergeRequests(projectId);
      const [issues, mergeRequests] = await Promise.all([issuesPromise, mergeRequestsPromise]);
      await writeIssuesToFile(projectId, issues);
      await writeMergeRequestsToFile(projectId, mergeRequests);
    });
    await Promise.all(projectPromises);
    await writeProjectsToFile(user, projects);
  } catch (error) {
    console.error(error);
  }
}

// Run the script with a given GitLab username
fetchAndWriteGitLabData('your_username');